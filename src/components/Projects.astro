---
import type { Project } from "../utils/types";
import ProjectCard from "./ProjectCard.astro";

const { projects } = Astro.props as { projects: Project[] };
const showMoreId = `show-more-projects`;
---

<div class="mb-20">
  <section id="projects">
    <div class="flex items-center justify-between">
      <div class="flex items-center">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M21 7.266v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.56V7.266a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            vector-effect="non-scaling-stroke"></path><path
            d="M3.528 7.207l8.18 4.544a.6.6 0 00.583 0l8.21-4.56M12 20.913v-9"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            vector-effect="non-scaling-stroke"></path><path
            d="M11.691 11.742l-7.8-4.334A.6.6 0 003 7.933v8.627a.6.6 0 00.309.525l7.8 4.333a.6.6 0 00.891-.525v-8.627a.6.6 0 00-.309-.524z"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-linejoin="round"
            vector-effect="non-scaling-stroke"></path>
        </svg>
        <p class="text-gray-1k font-semibold text-base ml-2">My Projects</p>
      </div>
    </div>
    <div class="mt-6">
      <div class="grid md:grid-cols-1 mt-6 -mx-6">
        <input type="checkbox" id={showMoreId} class="peer sr-only" />
        {projects.map((project, index) => (
          <ProjectCard project={project} class={index >= 4 ? "hidden peer-checked:block" : ""} />
        ))}
      </div>
      {projects.length > 4 && (
        <div class="mt-4 flex justify-center items-center">
          <label
            for={showMoreId}
            class="flex items-center font-semibold border transition-all ease-in duration-75 whitespace-nowrap text-center select-none disabled:shadow-none disabled:opacity-50 disabled:cursor-not-allowed gap-x-1 active:shadow-none text-xs leading-4 py-1 h-6 rounded-lg px-3 text-gray-1k bg-gray-00 border-gray-200 shadow-5 hover:shadow-10 cursor-pointer"
          >
            <span class="">Show More</span>
            <span class="-mr-1 transition-transform peer-checked:rotate-180">
              <svg
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M6 9L12 15L18 9"
                  stroke="currentColor"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  vector-effect="non-scaling-stroke"
                />
              </svg>
            </span>
          </label>
        </div>
      )}
    </div>
  </section>
</div>

<script define:vars={{ showMoreId }}>
  const showMoreCheckbox = document.getElementById(showMoreId);
  const showMoreLabel = document.querySelector(`label[for="${showMoreId}"]`);
  const firstSpan = showMoreLabel?.querySelector("span:first-child");
  const arrowIcon = showMoreLabel?.querySelector("span:last-child");

  showMoreCheckbox?.addEventListener("change", function () {
    if (this.checked) {
      if (firstSpan) {
        firstSpan.innerHTML = "Show Less";
      }
      arrowIcon?.classList.add("rotate-180");
    } else {
      if (firstSpan) {
        firstSpan.innerHTML = "Show More";
      }
      arrowIcon?.classList.remove("rotate-180");
    }
  });
</script>
